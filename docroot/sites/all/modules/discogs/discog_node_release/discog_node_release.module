<?php
/**
 * @file
 * Provides a custom Discography node type.
 */

/**
 * Implements hook_node_info().
 */
function discog_node_release_node_info() {
  return array(
    'release' => array(
      'name' => t('Discography release'),
      'base' => 'release',
      'description' => t('Holds the information for a discography release.'),
      'has_title' => TRUE,
      'title_label' => t('Release Title'),
      'has_body' => FALSE,
      'help' => t('The Release content type holds information about a discography release, such as an album, single, or compilation.'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function discog_node_release_help($path, $arg) {
  switch ($path) {
    case 'admin/help#discog_node_release':
      return '<h3>' . t('About') . '</h3>'
        . '<p>'  . t('The Release Node module provides a Release content type for the Discography package.') . '</p>'
        . '<p>'  . t('For more information, see the <a href="!url">online documentation</a> for the Discography Framework.', array('!url' => 'https://drupal.org/node/2031953')) . '</p>'
        . '<h3>' . t('Uses') . '</h3>'
        . '<p>'  . t('You can create releases like any other content type, by <a href="@link">adding a Release</a> in the Add Content section of the site.', array('@link' => url('node/add/release'))) . '</p>'
        . '<p>'  . t('In order to import releases from third parties (such as Discogs.com), you must enable the Discography Mediator module, a Discography Provider Adapter module (such as the Discogs.com Adapter module), and the Release Adapter module.')
        . ' '    . t('Go to the !link page to enable Discography modules.', array('!link' => l(t('Modules'), 'admin/modules')))
        . '</p>';
  }
}

/**
 * Implementation of hook_permission().
 */
function discog_node_release_permission() {
  return array(
    'create release' => array(
      'title' => t('Create a release'),
      'description' => t('Create a release'),
    ),
    'edit own release'=> array(
      'title' => t('Edit own release'),
      'description' => t('Edit a release that you created'),
    ),
    'edit any release'=> array(
      'title' => t('Edit any release'),
      'description' => t('Edit any release'),
    ),
    'delete own release'=> array(
      'title' => t('Delete own release'),
      'description' => t('Delete a release that you created'),
    ),
    'delete any release'=> array(
      'title' => t('Delete any release'),
      'description' => t('Delete any release'),
    ),
  );
}

/**
 * Implements hook_node_access().
 */
function discog_node_release_node_access($node, $op, $account) {
  switch ($op) {
    case 'create':
      if (user_access('create release', $account)) {
        return NODE_ACCESS_ALLOW;
      }
      return NODE_ACCESS_DENY;
    case 'update':
      // Deliberate fall-through
    case 'delete':
      // $node should always be an object in these cases
      $is_auth = ($account->uid == $node->uid);
      $own = user_access($op . ' own release', $account) && $is_auth;
      $any = user_access($op . ' any release', $account);
      if ($own || $any) {
        return NODE_ACCESS_ALLOW;
      }
      return NODE_ACCESS_DENY;
    default:
      return NODE_ACCESS_IGNORE;
  }
}

/**
 * Implements hook_form().
 *
 * Note: "You also need to implement hook_form() if you want your content type
 * to appear in Content Type admin page on admin/structure/types."
 * @link https://api.drupal.org/api/drupal/modules%21node%21node.api.php/function/hook_node_info/7
 *
 * Also note that the hook name is based on the base name defined in
 * hook_node_info().
 */
function release_form($node, &$form_state) {
  // Return the standard default form.
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_validate().
 *
 * TODO: Placeholder.
 *
function discog_node_release_validate($node, $form, &$form_state) {
  // To indicate a validation error, use form_set_error().
}
//*/

/**
 * Implements hook_insert().
 *
 * TODO: Placeholder.
 *
function release_insert($node) {
  // Processing to be done on insert (e.g. watchdog log)
}
//*/

/**
 * Implements hook_menu().
 *
 * This implementation creates a 'releases' menu item that lists all of the
 * release nodes. Sites that use Views will probably want to override this.
 */
function discog_node_release_node_menu() {
  $items['releases'] = array(
    'title' => 'Discography releases',
    'page callback' => '_discog_node_release_display_nodes',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Menu callback; generates a listing of promoted discography nodes. This code
 * is mostly copied from node_page_default() in node.module.
 *
 * @return
 *   Rendered output of Discography nodes
 * @see node_page_default()
 */
function _discog_node_release_display_nodes() {
  $result = pager_query(
    db_rewrite_sql('SELECT * FROM {node} n '
      . 'WHERE n.promote = 1 AND n.status = 1 AND n.type = "release" '
      . 'ORDER BY n.sticky DESC, n.created DESC'
    ), variable_get('default_nodes_main', 10));

  $output = '';
  $has_rows = FALSE;
  while ($node = db_fetch_object($result)) {
    $output .= node_view(node_load($node->nid), 1);
    $has_rows = TRUE;
  }
  if (!$num_rows) {
    $output = t('No discography releases have been created. If you would like to add some, you can <a href="@nurl">create a discography release here</a>.',
      array(
        '@nurl' => url('node/add/discogs'),
      )
    );
  }
  drupal_set_title('');
  return $output;
}

/**
 * Implements hook_view().
 *
 * This implementation calls hook_theme() to theme the Discography release.
 *
 * TODO: Placeholder.
 *
function discog_node_release_view($node, $view_mode) {
  if ($view_mode == 'full') {
    $variables = array(
      'release' => array(),
      'teaser' => FALSE,
      'page' => TRUE,
    );
    $node->content['release'] = array(
      '#markup' => theme('release', $variables),
      '#weight' => 0,
    );
  }
  return $node;
}
//*/

/**
 * Implements hook_theme().
 *
 * TODO: Placeholder.
 *
function discog_node_release_theme($existing, $type, $theme, $path) {
  return array(
    'release' => array(
      'template' => 'discog-release',
      'variables' => array(
        'release' => array(),
        'teaser' => FALSE,
        'page' => FALSE,
      )
    ),
  );
}
//*/

/**
 * TODO: I think that all Fields automatically integrate into Views now, so no
 * need to implement any of the Views hooks.
 *
 * Implementation of hook_views_api().
 *
function discog_node_release_views_api() {
  // Note that you can include 'path' in this array so that your views.inc
  // file can be stored in a different location.
  return array(
    'api' => 2.0,
    'path' => drupal_get_path('module', 'discog_node') . '/views',
  );
}
//*/
